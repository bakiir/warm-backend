const Order = require("../models/Order");
const Product = require("../models/Product");

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏—Ö–æ–¥–∞
exports.createOrder = async (req, res) => {
    try {
        const { supplier, items } = req.body;

        const order = new Order({
            supplier,
            items,
            acceptedBy: req.user.id // üëà —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–º–µ–Ω—É
        });

        await order.save();

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ
        for (const item of items) {
            await Product.findByIdAndUpdate(
                item.productId,
                { $inc: { quantity: item.quantity } }
            );
        }

        res.status(201).json(order);
    } catch (err) {
        console.error(err);
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏—Ö–æ–¥–∞" });
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–∏—Ö–æ–¥–æ–≤
exports.getAllOrders = async (req, res) => {
    try {
        const orders = await Order.find();

        res.json(orders);
    } catch (err) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏—Ö–æ–¥–æ–≤" });
    }
};
